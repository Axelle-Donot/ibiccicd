name: CI/CD Workflow

on:
  pull_request:
    branches:
      - main
      - developpement
  push:
    branches:
      - main
      - developpement
  release:
    types:
      - created

jobs:
  # Job de test pour PR
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Node.js (si applicable)
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # Job de build et de publication de l'image Docker lors du merge sur main
  build_and_publish:
    runs-on: ubuntu-latest
    needs: test # Ce job dépend du job test réussi
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image with commit SHA
        run: |
          docker build -t loutron34/ibiccicd:${{ github.sha }} .
          docker push loutron34/ibiccicd:${{ github.sha }}

  # Job de release (tagging et push Docker)
  release:
    runs-on: ubuntu-latest
    needs: build_and_publish # Ce job dépend du job précédent
    if: github.event_name == 'release' # Ce job s'exécute uniquement lors d'une création de release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image with release tag
        run: |
          docker build -t ibiccicd:${{ github.event.release.tag_name }} .
          docker push ibiccicd:${{ github.event.release.tag_name }}
